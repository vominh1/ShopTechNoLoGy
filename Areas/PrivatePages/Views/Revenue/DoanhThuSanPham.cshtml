@model IEnumerable<ShopTechNoLoGy.Models.DoanhThuSanPhamModel>

@{
    ViewBag.Title = "Báo cáo doanh thu theo sản phẩm";
    Layout = "~/Areas/PrivatePages/Views/Shared/_Layout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<style>
    .page-header {
        background: linear-gradient(135deg, #00c6fb 0%, #005bea 100%);
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
    }

    .card {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        margin-bottom: 2rem;
    }

    #productRevenueChart {
        max-width: 100% !important;
        height: 400px !important;
    }
</style>

<div class="page-header">
    <div class="container">
        <h1 class="display-4">Báo cáo doanh thu theo sản phẩm</h1>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Bảng doanh thu theo sản phẩm</h5>
                    <button id="toggleTableButton" class="btn btn-light btn-sm">
                        <i class="fas fa-table"></i> Ẩn/Hiện bảng
                    </button>
                    <a href="@Url.Action("ExportProductRevenueToExcel", "Revenue")" class="btn btn-success">
                        Xuất Excel Doanh Thu Theo Sản Phẩm
                    </a>
                </div>
                <div id="tableContent" class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col">Tên Sản Phẩm</th>
                                    <th scope="col">Doanh Thu</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.TenSanPham</td>
                                        <td>@item.DoanhThu.ToString("C0")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Biểu đồ doanh thu theo sản phẩm</h5>
                    <button id="toggleChartButton" class="btn btn-light btn-sm">
                        <i class="fas fa-chart-pie"></i> Ẩn/Hiện biểu đồ
                    </button>
                </div>
                <div id="chartContent" class="card-body" style="display: none;">
                    <canvas id="productRevenueChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var tableContent = document.getElementById('tableContent');
        var chartContent = document.getElementById('chartContent');
        var toggleTableButton = document.getElementById('toggleTableButton');
        var toggleChartButton = document.getElementById('toggleChartButton');

        toggleTableButton.addEventListener('click', function() {
            tableContent.style.display = tableContent.style.display === 'none' ? 'block' : 'none';
        });

        toggleChartButton.addEventListener('click', function() {
            chartContent.style.display = chartContent.style.display === 'none' ? 'block' : 'none';
            if (chartContent.style.display === 'block' && !chartContent.chart) {
                createChart();
            }
        });

        function createChart() {
            var labels = [@Html.Raw(string.Join(",", Model.Select(item => $"'{item.TenSanPham}'")))];
            var data = [@string.Join(",", Model.Select(item => item.DoanhThu))];

            var ctx = document.getElementById('productRevenueChart').getContext('2d');
            chartContent.chart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Doanh thu theo sản phẩm',
                        data: data,
                        backgroundColor: generateColors(data.length),
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    var label = context.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed !== null) {
                                        label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.parsed);
                                    }
                                    return label;
                                }
                            }
                        }
                    }
                }
            });
        }

        function generateColors(count) {
            var colors = [];
            for (var i = 0; i < count; i++) {
                colors.push(`hsl(${(i * 360 / count) % 360}, 70%, 60%)`);
            }
            return colors;
        }
    });
</script>