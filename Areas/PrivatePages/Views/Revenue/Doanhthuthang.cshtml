@model IEnumerable<ShopTechNoLoGy.Models.DoanhThuThangModel>

@{
    ViewBag.Title = "Báo cáo doanh thu theo tháng";
    Layout = "~/Areas/PrivatePages/Views/Shared/_Layout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<style>
    .page-header {
        background: linear-gradient(135deg, #00c6fb 0%, #005bea 100%);
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
    }

    .card {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        margin-bottom: 2rem;
    }

    #monthlyRevenueChart {
        max-width: 100% !important;
        height: 400px !important;
    }
</style>

    <div class="page-header">
        <div class="container">
            <h1 class="display-4">Báo cáo doanh thu theo tháng</h1>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Bảng doanh thu theo tháng</h5>
                        <button id="toggleTableButton" class="btn btn-light btn-sm">
                            <i class="fas fa-table"></i> Ẩn/Hiện bảng
                        </button>
                    </div>
                    <div id="tableContent" class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">Tháng</th>
                                        <th scope="col">Năm</th>
                                        <th scope="col">Doanh thu</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.Thang</td>
                                            <td>@item.Nam</td>
                                            <td>@item.DoanhThu.ToString("C0")</td>
                                            <td>
                                                <a href="@Url.Action("ChiTietDoanhThuNgaytrongthang", new { thang = item.Thang, nam = item.Nam })" class="btn btn-info btn-sm">
                                                    Chi tiết
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">Biểu đồ doanh thu theo tháng</h5>
                        <button id="toggleChartButton" class="btn btn-light btn-sm">
                            <i class="fas fa-chart-bar"></i> Ẩn/Hiện biểu đồ
                        </button>
                    </div>
                    <div id="chartContent" class="card-body" style="display: none;">
                        <canvas id="monthlyRevenueChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var tableContent = document.getElementById('tableContent');
            var chartContent = document.getElementById('chartContent');
            var toggleTableButton = document.getElementById('toggleTableButton');
            var toggleChartButton = document.getElementById('toggleChartButton');

            toggleTableButton.addEventListener('click', function() {
                tableContent.style.display = tableContent.style.display === 'none' ? 'block' : 'none';
            });

            toggleChartButton.addEventListener('click', function() {
                chartContent.style.display = chartContent.style.display === 'none' ? 'block' : 'none';
                if (chartContent.style.display === 'block' && !chartContent.chart) {
                    createChart();
                }
            });

            function createChart() {
                var labels = [@Html.Raw(string.Join(",", Model.Select(item => $"'{item.Thang}/{item.Nam}'")))];
                var data = [@string.Join(",", Model.Select(item => item.DoanhThu))];

                var ctx = document.getElementById('monthlyRevenueChart').getContext('2d');
                chartContent.chart = new Chart(ctx, {
                    type: 'line', // thay đổi biểu đồ thì thay đổi cái này ví dụ : line --> bar
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Doanh thu theo tháng',
                            data: data,
                            backgroundColor: 'rgba(0, 123, 255, 0.5)',
                            borderColor: 'rgba(0, 123, 255, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value, index, values) {
                                        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);
                                    }
                                }
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        var label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.parsed.y !== null) {
                                            label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.parsed.y);
                                        }
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
