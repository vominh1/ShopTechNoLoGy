@model IEnumerable<ShopTechNoLoGy.Models.DoanhThuNgayModel>

@{
    ViewBag.Title = "Báo cáo doanh thu hàng ngày";
    Layout = "~/Areas/PrivatePages/Views/Shared/_Layout.cshtml";
}

<h2>Báo cáo doanh thu hàng ngày</h2>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Ngày</th>
                <th scope="col">Doanh thu</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Ngay.ToShortDateString()</td>
                    <td>@item.DoanhThu.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Nút để mở hoặc đóng biểu đồ -->
<button id="toggleDailyChartButton" class="btn btn-primary">Xem biểu đồ</button>

<!-- Phần tử canvas để vẽ biểu đồ -->
<canvas id="dailyRevenueChart" width="400" height="200" style="display: none;"></canvas>

<!-- Style để điều chỉnh kích thước biểu đồ -->
<style>
    #dailyRevenueChart {
        max-width: auto !important;
        max-height: 400px !important;
    }
</style>

<!-- Include Chart.js library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var dailyChartVisible = false;
        var dailyChartCanvas = document.getElementById('dailyRevenueChart');
        var dailyChartButton = document.getElementById('toggleDailyChartButton');

        dailyChartButton.addEventListener('click', function () {
            dailyChartVisible = !dailyChartVisible;

            if (dailyChartVisible) {
                dailyChartCanvas.style.display = 'block';

                var dailyLabels = [];
                var dailyData = [];

                @foreach (var item in Model)
                {
                    @:dailyLabels.push('@item.Ngay.ToShortDateString()');
                    @:dailyData.push(@item.DoanhThu);
                }

                var dailyChartCtx = dailyChartCanvas.getContext('2d');

                var dailyRevenueChart = new Chart(dailyChartCtx, {
                    type: 'bar',
                    data: {
                        labels: dailyLabels,
                        datasets: [{
                            label: 'Doanh thu hàng ngày',
                            data: dailyData,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value, index, values) {
                                        return value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                                    }
                                }
                            }
                        }
                    }
                });

                dailyChartButton.textContent = 'Đóng biểu đồ';
            } else {
                dailyChartCanvas.style.display = 'none';
                dailyChartButton.textContent = 'Xem biểu đồ';
            }
        });
    });
</script>
